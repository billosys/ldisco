%% -*- erlang -*-
{application, 'lfe-disco',
 [
  %% A quick description of the application.
  {description, "An LFE client for Disco (MapReduce)"},

  %% The version of the application
  {vsn, "0.0.1"},

  %% All modules used by the application.
  {modules,
   [
    'lfe-disco',
    'lfe-disco-config',
    'lfe-disco-const',
    'lfe-disco-ddfs',
    'lfe-disco-error',
    'lfe-disco-job',
    'lfe-disco-scheme',
    'lfe-disco-task',
    'lfe-disco-util',
    'lfe-disco-worker',
    'lfe-disco-worker-command',
    'lfe-disco-worker-input',
    'lfe-disco-worker-job',
    'lfe-disco-worker-output',
    'lfe-disco-worker-pipeline',
    'lfe-disco-worker-protocol',
    'lfe-disco-worker-task'
   ]},

  %% All of the registered names the application uses. This can be ignored.
  {registered, []},

  %% Applications that are to be started prior to this one. This can be ignored
  %% leave it alone unless you understand it well and let the .rel files in
  %% your release handle this.
  {applications,
   [
    kernel,
    stdlib
   ]},

  %% OTP application loader will load, but not start, included apps. Again
  %% this can be ignored as well.  To load but not start an application it
  %% is easier to include it in the .rel file followed by the atom 'none'
  {included_applications, []},

  %% configuration parameters similar to those in the config file specified
  %% on the command line. can be fetched with gas:get_env
  {env, []}
 ]
}.
